// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/codec/db.proto
// Protobuf C++ Version: 6.30.1

#include "db.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace keystoneDB {

inline constexpr DBMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tables_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DBMetadata::DBMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DBMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DBMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DBMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DBMetadataDefaultTypeInternal() {}
  union {
    DBMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DBMetadataDefaultTypeInternal _DBMetadata_default_instance_;

inline constexpr DBDefinition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        charlen_{::uint64_t{0u}},
        isprimary_{false},
        isindex_{false},
        nullable_{false},
        type_{static_cast< ::keystoneDB::DBDefinition_DefinitionType >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR DBDefinition::DBDefinition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DBDefinition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DBDefinitionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DBDefinitionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DBDefinitionDefaultTypeInternal() {}
  union {
    DBDefinition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DBDefinitionDefaultTypeInternal _DBDefinition_default_instance_;

inline constexpr Column::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::keystoneDB::Column_ColumnType >(0)},
        integer_num_{0},
        float_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Column::Column(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Column_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ColumnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ColumnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ColumnDefaultTypeInternal() {}
  union {
    Column _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ColumnDefaultTypeInternal _Column_default_instance_;

inline constexpr TableMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        definitions_{},
        nextid_{::uint64_t{0u}},
        hasprimary_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TableMetadata::TableMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableMetadata_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableMetadataDefaultTypeInternal() {}
  union {
    TableMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableMetadataDefaultTypeInternal _TableMetadata_default_instance_;

inline constexpr Row::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : columns_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Row::Row(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Row_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RowDefaultTypeInternal() {}
  union {
    Row _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RowDefaultTypeInternal _Row_default_instance_;
}  // namespace keystoneDB
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_common_2fcodec_2fdb_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_common_2fcodec_2fdb_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2fcodec_2fdb_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Column, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Column, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Column, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Column, _impl_.integer_num_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Column, _impl_.str_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Column, _impl_.float_num_),
        1,
        2,
        0,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Row, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::keystoneDB::Row, _impl_.columns_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::TableMetadata, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::TableMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::keystoneDB::TableMetadata, _impl_.definitions_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::TableMetadata, _impl_.nextid_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::TableMetadata, _impl_.hasprimary_),
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_.isprimary_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_.isindex_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_.charlen_),
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBDefinition, _impl_.nullable_),
        5,
        0,
        2,
        3,
        1,
        4,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::keystoneDB::DBMetadata, _impl_.tables_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::keystoneDB::Column)},
        {16, -1, -1, sizeof(::keystoneDB::Row)},
        {25, 36, -1, sizeof(::keystoneDB::TableMetadata)},
        {39, 53, -1, sizeof(::keystoneDB::DBDefinition)},
        {59, -1, -1, sizeof(::keystoneDB::DBMetadata)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::keystoneDB::_Column_default_instance_._instance,
    &::keystoneDB::_Row_default_instance_._instance,
    &::keystoneDB::_TableMetadata_default_instance_._instance,
    &::keystoneDB::_DBDefinition_default_instance_._instance,
    &::keystoneDB::_DBMetadata_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fcodec_2fdb_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025common/codec/db.proto\022\nkeystoneDB\"\274\001\n\006"
    "Column\022+\n\004type\030\001 \001(\0162\035.keystoneDB.Column"
    ".ColumnType\022\023\n\013integer_num\030\002 \001(\005\022\013\n\003str\030"
    "\003 \001(\t\022\021\n\tfloat_num\030\004 \001(\001\"P\n\nColumnType\022\016"
    "\n\nCOLUMN_INT\020\000\022\017\n\013COLUMN_CHAR\020\001\022\017\n\013COLUM"
    "N_NULL\020\003\022\020\n\014COLUMN_FLOAT\020\004\"*\n\003Row\022#\n\007col"
    "umns\030\001 \003(\0132\022.keystoneDB.Column\"b\n\rTableM"
    "etadata\022-\n\013definitions\030\001 \003(\0132\030.keystoneD"
    "B.DBDefinition\022\016\n\006nextId\030\002 \001(\004\022\022\n\nhasPri"
    "mary\030\003 \001(\010\"\316\001\n\014DBDefinition\0225\n\004type\030\001 \001("
    "\0162\'.keystoneDB.DBDefinition.DefinitionTy"
    "pe\022\014\n\004name\030\002 \001(\t\022\021\n\tisPrimary\030\003 \001(\010\022\017\n\007i"
    "sIndex\030\004 \001(\010\022\017\n\007charLen\030\005 \001(\004\022\020\n\010nullabl"
    "e\030\006 \001(\010\"2\n\016DefinitionType\022\013\n\007INTEGER\020\001\022\010"
    "\n\004CHAR\020\002\022\t\n\005FLOAT\020\003\"\034\n\nDBMetadata\022\016\n\006tab"
    "les\030\001 \003(\t"
};
static ::absl::once_flag descriptor_table_common_2fcodec_2fdb_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_2fcodec_2fdb_2eproto = {
    false,
    false,
    609,
    descriptor_table_protodef_common_2fcodec_2fdb_2eproto,
    "common/codec/db.proto",
    &descriptor_table_common_2fcodec_2fdb_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_common_2fcodec_2fdb_2eproto::offsets,
    file_level_enum_descriptors_common_2fcodec_2fdb_2eproto,
    file_level_service_descriptors_common_2fcodec_2fdb_2eproto,
};
namespace keystoneDB {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Column_ColumnType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fcodec_2fdb_2eproto);
  return file_level_enum_descriptors_common_2fcodec_2fdb_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Column_ColumnType_internal_data_[] = {
    131072u, 32u, 6u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DBDefinition_DefinitionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fcodec_2fdb_2eproto);
  return file_level_enum_descriptors_common_2fcodec_2fdb_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t DBDefinition_DefinitionType_internal_data_[] = {
    196609u, 0u, };
// ===================================================================

class Column::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Column>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Column, _impl_._has_bits_);
};

Column::Column(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Column_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:keystoneDB.Column)
}
PROTOBUF_NDEBUG_INLINE Column::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::keystoneDB::Column& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        str_(arena, from.str_) {}

Column::Column(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Column& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Column_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Column* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, float_num_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::float_num_));

  // @@protoc_insertion_point(copy_constructor:keystoneDB.Column)
}
PROTOBUF_NDEBUG_INLINE Column::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        str_(arena) {}

inline void Column::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, float_num_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::float_num_));
}
Column::~Column() {
  // @@protoc_insertion_point(destructor:keystoneDB.Column)
  SharedDtor(*this);
}
inline void Column::SharedDtor(MessageLite& self) {
  Column& this_ = static_cast<Column&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.str_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Column::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Column(arena);
}
constexpr auto Column::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Column),
                                            alignof(Column));
}
constexpr auto Column::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Column_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Column::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Column>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Column::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Column>(), &Column::ByteSizeLong,
              &Column::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Column, _impl_._cached_size_),
          false,
      },
      &Column::kDescriptorMethods,
      &descriptor_table_common_2fcodec_2fdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Column_class_data_ =
            Column::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Column::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Column_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Column_class_data_.tc_table);
  return Column_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 29, 2>
Column::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Column, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Column_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::keystoneDB::Column>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional double float_num = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.float_num_)}},
    // optional .keystoneDB.Column.ColumnType type = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.type_)}},
    // optional int32 integer_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Column, _impl_.integer_num_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.integer_num_)}},
    // optional string str = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Column, _impl_.str_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .keystoneDB.Column.ColumnType type = 1;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 integer_num = 2;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.integer_num_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string str = 3;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional double float_num = 4;
    {PROTOBUF_FIELD_OFFSET(Column, _impl_.float_num_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::FieldAuxEnumData{}, ::keystoneDB::Column_ColumnType_internal_data_},
  }},
  {{
    "\21\0\0\3\0\0\0\0"
    "keystoneDB.Column"
    "str"
  }},
};
PROTOBUF_NOINLINE void Column::Clear() {
// @@protoc_insertion_point(message_clear_start:keystoneDB.Column)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.str_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.float_num_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.float_num_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Column::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Column& this_ = static_cast<const Column&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Column::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Column& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:keystoneDB.Column)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .keystoneDB.Column.ColumnType type = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_type(), target);
  }

  // optional int32 integer_num = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_integer_num(), target);
  }

  // optional string str = 3;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "keystoneDB.Column.str");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional double float_num = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this_._internal_float_num(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keystoneDB.Column)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Column::ByteSizeLong(const MessageLite& base) {
  const Column& this_ = static_cast<const Column&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Column::ByteSizeLong() const {
  const Column& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:keystoneDB.Column)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000008u & cached_has_bits) * 9;
  if ((cached_has_bits & 0x00000007u) != 0) {
    // optional string str = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_str());
    }
    // optional .keystoneDB.Column.ColumnType type = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
    }
    // optional int32 integer_num = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_integer_num());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Column::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Column*>(&to_msg);
  auto& from = static_cast<const Column&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:keystoneDB.Column)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_str(from._internal_str());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.integer_num_ = from._impl_.integer_num_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.float_num_ = from._impl_.float_num_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Column::CopyFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:keystoneDB.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Column::InternalSwap(Column* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.str_, &other->_impl_.str_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Column, _impl_.float_num_)
      + sizeof(Column::_impl_.float_num_)
      - PROTOBUF_FIELD_OFFSET(Column, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata Column::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Row::_Internal {
 public:
};

Row::Row(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Row_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:keystoneDB.Row)
}
PROTOBUF_NDEBUG_INLINE Row::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::keystoneDB::Row& from_msg)
      : columns_{visibility, arena, from.columns_},
        _cached_size_{0} {}

Row::Row(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Row& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Row_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Row* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:keystoneDB.Row)
}
PROTOBUF_NDEBUG_INLINE Row::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : columns_{visibility, arena},
        _cached_size_{0} {}

inline void Row::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Row::~Row() {
  // @@protoc_insertion_point(destructor:keystoneDB.Row)
  SharedDtor(*this);
}
inline void Row::SharedDtor(MessageLite& self) {
  Row& this_ = static_cast<Row&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Row::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Row(arena);
}
constexpr auto Row::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Row, _impl_.columns_) +
          decltype(Row::_impl_.columns_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Row), alignof(Row), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Row::PlacementNew_,
                                 sizeof(Row),
                                 alignof(Row));
  }
}
constexpr auto Row::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Row_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Row::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Row>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Row::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Row>(), &Row::ByteSizeLong,
              &Row::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Row, _impl_._cached_size_),
          false,
      },
      &Row::kDescriptorMethods,
      &descriptor_table_common_2fcodec_2fdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Row_class_data_ =
            Row::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Row::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Row_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Row_class_data_.tc_table);
  return Row_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Row::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Row_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::keystoneDB::Row>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .keystoneDB.Column columns = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Row, _impl_.columns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .keystoneDB.Column columns = 1;
    {PROTOBUF_FIELD_OFFSET(Row, _impl_.columns_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::keystoneDB::Column>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Row::Clear() {
// @@protoc_insertion_point(message_clear_start:keystoneDB.Row)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.columns_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Row::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Row& this_ = static_cast<const Row&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Row::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Row& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:keystoneDB.Row)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .keystoneDB.Column columns = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_columns_size());
       i < n; i++) {
    const auto& repfield = this_._internal_columns().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keystoneDB.Row)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Row::ByteSizeLong(const MessageLite& base) {
  const Row& this_ = static_cast<const Row&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Row::ByteSizeLong() const {
  const Row& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:keystoneDB.Row)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .keystoneDB.Column columns = 1;
    {
      total_size += 1UL * this_._internal_columns_size();
      for (const auto& msg : this_._internal_columns()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Row::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Row*>(&to_msg);
  auto& from = static_cast<const Row&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:keystoneDB.Row)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_columns()->MergeFrom(
      from._internal_columns());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Row::CopyFrom(const Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:keystoneDB.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Row::InternalSwap(Row* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
}

::google::protobuf::Metadata Row::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TableMetadata::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TableMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_._has_bits_);
};

TableMetadata::TableMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:keystoneDB.TableMetadata)
}
PROTOBUF_NDEBUG_INLINE TableMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::keystoneDB::TableMetadata& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        definitions_{visibility, arena, from.definitions_} {}

TableMetadata::TableMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nextid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, nextid_),
           offsetof(Impl_, hasprimary_) -
               offsetof(Impl_, nextid_) +
               sizeof(Impl_::hasprimary_));

  // @@protoc_insertion_point(copy_constructor:keystoneDB.TableMetadata)
}
PROTOBUF_NDEBUG_INLINE TableMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        definitions_{visibility, arena} {}

inline void TableMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nextid_),
           0,
           offsetof(Impl_, hasprimary_) -
               offsetof(Impl_, nextid_) +
               sizeof(Impl_::hasprimary_));
}
TableMetadata::~TableMetadata() {
  // @@protoc_insertion_point(destructor:keystoneDB.TableMetadata)
  SharedDtor(*this);
}
inline void TableMetadata::SharedDtor(MessageLite& self) {
  TableMetadata& this_ = static_cast<TableMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableMetadata(arena);
}
constexpr auto TableMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.definitions_) +
          decltype(TableMetadata::_impl_.definitions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TableMetadata), alignof(TableMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableMetadata::PlacementNew_,
                                 sizeof(TableMetadata),
                                 alignof(TableMetadata));
  }
}
constexpr auto TableMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableMetadata>(), &TableMetadata::ByteSizeLong,
              &TableMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_._cached_size_),
          false,
      },
      &TableMetadata::kDescriptorMethods,
      &descriptor_table_common_2fcodec_2fdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TableMetadata_class_data_ =
            TableMetadata::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL TableMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableMetadata_class_data_.tc_table);
  return TableMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
TableMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::keystoneDB::TableMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .keystoneDB.DBDefinition definitions = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.definitions_)}},
    // optional uint64 nextId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TableMetadata, _impl_.nextid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.nextid_)}},
    // optional bool hasPrimary = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableMetadata, _impl_.hasprimary_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.hasprimary_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .keystoneDB.DBDefinition definitions = 1;
    {PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.definitions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 nextId = 2;
    {PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.nextid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool hasPrimary = 3;
    {PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.hasprimary_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::keystoneDB::DBDefinition>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TableMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:keystoneDB.TableMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.definitions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.nextid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hasprimary_) -
        reinterpret_cast<char*>(&_impl_.nextid_)) + sizeof(_impl_.hasprimary_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableMetadata& this_ = static_cast<const TableMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:keystoneDB.TableMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .keystoneDB.DBDefinition definitions = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_definitions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_definitions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional uint64 nextId = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this_._internal_nextid(), target);
  }

  // optional bool hasPrimary = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_hasprimary(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keystoneDB.TableMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableMetadata::ByteSizeLong(const MessageLite& base) {
  const TableMetadata& this_ = static_cast<const TableMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableMetadata::ByteSizeLong() const {
  const TableMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:keystoneDB.TableMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .keystoneDB.DBDefinition definitions = 1;
    {
      total_size += 1UL * this_._internal_definitions_size();
      for (const auto& msg : this_._internal_definitions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += static_cast<bool>(0x00000002u & cached_has_bits) * 2;
   {
    // optional uint64 nextId = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_nextid());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableMetadata*>(&to_msg);
  auto& from = static_cast<const TableMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:keystoneDB.TableMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_definitions()->MergeFrom(
      from._internal_definitions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_impl_.nextid_ = from._impl_.nextid_;
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.hasprimary_ = from._impl_.hasprimary_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableMetadata::CopyFrom(const TableMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:keystoneDB.TableMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableMetadata::InternalSwap(TableMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.definitions_.InternalSwap(&other->_impl_.definitions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.hasprimary_)
      + sizeof(TableMetadata::_impl_.hasprimary_)
      - PROTOBUF_FIELD_OFFSET(TableMetadata, _impl_.nextid_)>(
          reinterpret_cast<char*>(&_impl_.nextid_),
          reinterpret_cast<char*>(&other->_impl_.nextid_));
}

::google::protobuf::Metadata TableMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DBDefinition::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DBDefinition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_._has_bits_);
};

DBDefinition::DBDefinition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DBDefinition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:keystoneDB.DBDefinition)
}
PROTOBUF_NDEBUG_INLINE DBDefinition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::keystoneDB::DBDefinition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

DBDefinition::DBDefinition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DBDefinition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DBDefinition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DBDefinition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, charlen_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, charlen_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, charlen_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:keystoneDB.DBDefinition)
}
PROTOBUF_NDEBUG_INLINE DBDefinition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        type_{static_cast< ::keystoneDB::DBDefinition_DefinitionType >(1)} {}

inline void DBDefinition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, charlen_),
           0,
           offsetof(Impl_, nullable_) -
               offsetof(Impl_, charlen_) +
               sizeof(Impl_::nullable_));
}
DBDefinition::~DBDefinition() {
  // @@protoc_insertion_point(destructor:keystoneDB.DBDefinition)
  SharedDtor(*this);
}
inline void DBDefinition::SharedDtor(MessageLite& self) {
  DBDefinition& this_ = static_cast<DBDefinition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DBDefinition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DBDefinition(arena);
}
constexpr auto DBDefinition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DBDefinition),
                                            alignof(DBDefinition));
}
constexpr auto DBDefinition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DBDefinition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DBDefinition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DBDefinition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DBDefinition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DBDefinition>(), &DBDefinition::ByteSizeLong,
              &DBDefinition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_._cached_size_),
          false,
      },
      &DBDefinition::kDescriptorMethods,
      &descriptor_table_common_2fcodec_2fdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DBDefinition_class_data_ =
            DBDefinition::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DBDefinition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DBDefinition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DBDefinition_class_data_.tc_table);
  return DBDefinition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 36, 2>
DBDefinition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DBDefinition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::keystoneDB::DBDefinition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .keystoneDB.DBDefinition.DefinitionType type = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 5, 3, PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.type_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.name_)}},
    // optional bool isPrimary = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DBDefinition, _impl_.isprimary_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.isprimary_)}},
    // optional bool isIndex = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DBDefinition, _impl_.isindex_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.isindex_)}},
    // optional uint64 charLen = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DBDefinition, _impl_.charlen_), 1>(),
     {40, 1, 0, PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.charlen_)}},
    // optional bool nullable = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DBDefinition, _impl_.nullable_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.nullable_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .keystoneDB.DBDefinition.DefinitionType type = 1;
    {PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.type_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool isPrimary = 3;
    {PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.isprimary_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool isIndex = 4;
    {PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.isindex_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint64 charLen = 5;
    {PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.charlen_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool nullable = 6;
    {PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.nullable_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {1, 3},
  }},
  {{
    "\27\0\4\0\0\0\0\0"
    "keystoneDB.DBDefinition"
    "name"
  }},
};
PROTOBUF_NOINLINE void DBDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:keystoneDB.DBDefinition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eu) != 0) {
    ::memset(&_impl_.charlen_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.nullable_) -
        reinterpret_cast<char*>(&_impl_.charlen_)) + sizeof(_impl_.nullable_));
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DBDefinition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DBDefinition& this_ = static_cast<const DBDefinition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DBDefinition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DBDefinition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:keystoneDB.DBDefinition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .keystoneDB.DBDefinition.DefinitionType type = 1;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this_._internal_type(), target);
  }

  // optional string name = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const std::string& _s = this_._internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "keystoneDB.DBDefinition.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool isPrimary = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_isprimary(), target);
  }

  // optional bool isIndex = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this_._internal_isindex(), target);
  }

  // optional uint64 charLen = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this_._internal_charlen(), target);
  }

  // optional bool nullable = 6;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this_._internal_nullable(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keystoneDB.DBDefinition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DBDefinition::ByteSizeLong(const MessageLite& base) {
  const DBDefinition& this_ = static_cast<const DBDefinition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DBDefinition::ByteSizeLong() const {
  const DBDefinition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:keystoneDB.DBDefinition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x0000001cu & cached_has_bits) * 2;
  if ((cached_has_bits & 0x00000023u) != 0) {
    // optional string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_name());
    }
    // optional uint64 charLen = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_charlen());
    }
    // optional .keystoneDB.DBDefinition.DefinitionType type = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DBDefinition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DBDefinition*>(&to_msg);
  auto& from = static_cast<const DBDefinition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:keystoneDB.DBDefinition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_name(from._internal_name());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_impl_.charlen_ = from._impl_.charlen_;
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _this->_impl_.isprimary_ = from._impl_.isprimary_;
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _this->_impl_.isindex_ = from._impl_.isindex_;
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.nullable_ = from._impl_.nullable_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DBDefinition::CopyFrom(const DBDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:keystoneDB.DBDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DBDefinition::InternalSwap(DBDefinition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.type_)
      + sizeof(DBDefinition::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(DBDefinition, _impl_.charlen_)>(
          reinterpret_cast<char*>(&_impl_.charlen_),
          reinterpret_cast<char*>(&other->_impl_.charlen_));
}

::google::protobuf::Metadata DBDefinition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DBMetadata::_Internal {
 public:
};

DBMetadata::DBMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DBMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:keystoneDB.DBMetadata)
}
PROTOBUF_NDEBUG_INLINE DBMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::keystoneDB::DBMetadata& from_msg)
      : tables_{visibility, arena, from.tables_},
        _cached_size_{0} {}

DBMetadata::DBMetadata(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DBMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DBMetadata_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DBMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:keystoneDB.DBMetadata)
}
PROTOBUF_NDEBUG_INLINE DBMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : tables_{visibility, arena},
        _cached_size_{0} {}

inline void DBMetadata::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DBMetadata::~DBMetadata() {
  // @@protoc_insertion_point(destructor:keystoneDB.DBMetadata)
  SharedDtor(*this);
}
inline void DBMetadata::SharedDtor(MessageLite& self) {
  DBMetadata& this_ = static_cast<DBMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DBMetadata::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DBMetadata(arena);
}
constexpr auto DBMetadata::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DBMetadata, _impl_.tables_) +
          decltype(DBMetadata::_impl_.tables_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DBMetadata), alignof(DBMetadata), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DBMetadata::PlacementNew_,
                                 sizeof(DBMetadata),
                                 alignof(DBMetadata));
  }
}
constexpr auto DBMetadata::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DBMetadata_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DBMetadata::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DBMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DBMetadata::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DBMetadata>(), &DBMetadata::ByteSizeLong,
              &DBMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DBMetadata, _impl_._cached_size_),
          false,
      },
      &DBMetadata::kDescriptorMethods,
      &descriptor_table_common_2fcodec_2fdb_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        DBMetadata_class_data_ =
            DBMetadata::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL DBMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DBMetadata_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DBMetadata_class_data_.tc_table);
  return DBMetadata_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 36, 2>
DBMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DBMetadata_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::keystoneDB::DBMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string tables = 1;
    {::_pbi::TcParser::FastSR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DBMetadata, _impl_.tables_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string tables = 1;
    {PROTOBUF_FIELD_OFFSET(DBMetadata, _impl_.tables_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\25\6\0\0\0\0\0\0"
    "keystoneDB.DBMetadata"
    "tables"
  }},
};
PROTOBUF_NOINLINE void DBMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:keystoneDB.DBMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tables_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DBMetadata::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DBMetadata& this_ = static_cast<const DBMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DBMetadata::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DBMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:keystoneDB.DBMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string tables = 1;
  for (int i = 0, n = this_._internal_tables_size(); i < n; ++i) {
    const auto& s = this_._internal_tables().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "keystoneDB.DBMetadata.tables");
    target = stream->WriteString(1, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keystoneDB.DBMetadata)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DBMetadata::ByteSizeLong(const MessageLite& base) {
  const DBMetadata& this_ = static_cast<const DBMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DBMetadata::ByteSizeLong() const {
  const DBMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:keystoneDB.DBMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string tables = 1;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tables().size());
      for (int i = 0, n = this_._internal_tables().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tables().Get(i));
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DBMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DBMetadata*>(&to_msg);
  auto& from = static_cast<const DBMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:keystoneDB.DBMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tables()->MergeFrom(from._internal_tables());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DBMetadata::CopyFrom(const DBMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:keystoneDB.DBMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DBMetadata::InternalSwap(DBMetadata* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tables_.InternalSwap(&other->_impl_.tables_);
}

::google::protobuf::Metadata DBMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace keystoneDB
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_common_2fcodec_2fdb_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
