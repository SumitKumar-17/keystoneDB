// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common/codec/db.proto
// Protobuf C++ Version: 6.30.1

#ifndef common_2fcodec_2fdb_2eproto_2epb_2eh
#define common_2fcodec_2fdb_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fcodec_2fdb_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fcodec_2fdb_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_common_2fcodec_2fdb_2eproto;
}  // extern "C"
namespace keystoneDB {
enum Column_ColumnType : int;
extern const uint32_t Column_ColumnType_internal_data_[];
enum DBDefinition_DefinitionType : int;
extern const uint32_t DBDefinition_DefinitionType_internal_data_[];
class Column;
struct ColumnDefaultTypeInternal;
extern ColumnDefaultTypeInternal _Column_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Column_class_data_;
class DBDefinition;
struct DBDefinitionDefaultTypeInternal;
extern DBDefinitionDefaultTypeInternal _DBDefinition_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DBDefinition_class_data_;
class DBMetadata;
struct DBMetadataDefaultTypeInternal;
extern DBMetadataDefaultTypeInternal _DBMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DBMetadata_class_data_;
class Row;
struct RowDefaultTypeInternal;
extern RowDefaultTypeInternal _Row_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Row_class_data_;
class TableMetadata;
struct TableMetadataDefaultTypeInternal;
extern TableMetadataDefaultTypeInternal _TableMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TableMetadata_class_data_;
}  // namespace keystoneDB
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::keystoneDB::Column_ColumnType_internal_data_>
    internal::EnumTraitsImpl::value<::keystoneDB::Column_ColumnType>;
template <>
internal::EnumTraitsT<::keystoneDB::DBDefinition_DefinitionType_internal_data_>
    internal::EnumTraitsImpl::value<::keystoneDB::DBDefinition_DefinitionType>;
}  // namespace protobuf
}  // namespace google

namespace keystoneDB {
enum Column_ColumnType : int {
  Column_ColumnType_COLUMN_INT = 0,
  Column_ColumnType_COLUMN_CHAR = 1,
  Column_ColumnType_COLUMN_NULL = 3,
  Column_ColumnType_COLUMN_FLOAT = 4,
};

extern const uint32_t Column_ColumnType_internal_data_[];
inline constexpr Column_ColumnType Column_ColumnType_ColumnType_MIN =
    static_cast<Column_ColumnType>(0);
inline constexpr Column_ColumnType Column_ColumnType_ColumnType_MAX =
    static_cast<Column_ColumnType>(4);
inline bool Column_ColumnType_IsValid(int value) {
  return 0 <= value && value <= 4 && ((27u >> value) & 1) != 0;
}
inline constexpr int Column_ColumnType_ColumnType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Column_ColumnType_descriptor();
template <typename T>
const std::string& Column_ColumnType_Name(T value) {
  static_assert(std::is_same<T, Column_ColumnType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ColumnType_Name().");
  return Column_ColumnType_Name(static_cast<Column_ColumnType>(value));
}
template <>
inline const std::string& Column_ColumnType_Name(Column_ColumnType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Column_ColumnType_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool Column_ColumnType_Parse(
    absl::string_view name, Column_ColumnType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Column_ColumnType>(Column_ColumnType_descriptor(), name,
                                           value);
}
enum DBDefinition_DefinitionType : int {
  DBDefinition_DefinitionType_INTEGER = 1,
  DBDefinition_DefinitionType_CHAR = 2,
  DBDefinition_DefinitionType_FLOAT = 3,
};

extern const uint32_t DBDefinition_DefinitionType_internal_data_[];
inline constexpr DBDefinition_DefinitionType DBDefinition_DefinitionType_DefinitionType_MIN =
    static_cast<DBDefinition_DefinitionType>(1);
inline constexpr DBDefinition_DefinitionType DBDefinition_DefinitionType_DefinitionType_MAX =
    static_cast<DBDefinition_DefinitionType>(3);
inline bool DBDefinition_DefinitionType_IsValid(int value) {
  return 1 <= value && value <= 3;
}
inline constexpr int DBDefinition_DefinitionType_DefinitionType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DBDefinition_DefinitionType_descriptor();
template <typename T>
const std::string& DBDefinition_DefinitionType_Name(T value) {
  static_assert(std::is_same<T, DBDefinition_DefinitionType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DefinitionType_Name().");
  return DBDefinition_DefinitionType_Name(static_cast<DBDefinition_DefinitionType>(value));
}
template <>
inline const std::string& DBDefinition_DefinitionType_Name(DBDefinition_DefinitionType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DBDefinition_DefinitionType_descriptor, 1, 3>(
      static_cast<int>(value));
}
inline bool DBDefinition_DefinitionType_Parse(
    absl::string_view name, DBDefinition_DefinitionType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<DBDefinition_DefinitionType>(DBDefinition_DefinitionType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class DBMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:keystoneDB.DBMetadata) */ {
 public:
  inline DBMetadata() : DBMetadata(nullptr) {}
  ~DBMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBMetadata(::google::protobuf::internal::ConstantInitialized);

  inline DBMetadata(const DBMetadata& from) : DBMetadata(nullptr, from) {}
  inline DBMetadata(DBMetadata&& from) noexcept
      : DBMetadata(nullptr, std::move(from)) {}
  inline DBMetadata& operator=(const DBMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBMetadata& operator=(DBMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBMetadata& default_instance() {
    return *reinterpret_cast<const DBMetadata*>(
        &_DBMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(DBMetadata& a, DBMetadata& b) { a.Swap(&b); }
  inline void Swap(DBMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBMetadata& from) { DBMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "keystoneDB.DBMetadata"; }

 protected:
  explicit DBMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DBMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DBMetadata& from);
  DBMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DBMetadata&& from) noexcept
      : DBMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTablesFieldNumber = 1,
  };
  // repeated string tables = 1;
  int tables_size() const;
  private:
  int _internal_tables_size() const;

  public:
  void clear_tables() ;
  const std::string& tables(int index) const;
  std::string* PROTOBUF_NONNULL mutable_tables(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tables(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_tables();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_tables(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& tables() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_tables();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_tables() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_tables();

  public:
  // @@protoc_insertion_point(class_scope:keystoneDB.DBMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DBMetadata& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> tables_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fcodec_2fdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DBMetadata_class_data_;
// -------------------------------------------------------------------

class DBDefinition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:keystoneDB.DBDefinition) */ {
 public:
  inline DBDefinition() : DBDefinition(nullptr) {}
  ~DBDefinition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DBDefinition* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DBDefinition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DBDefinition(::google::protobuf::internal::ConstantInitialized);

  inline DBDefinition(const DBDefinition& from) : DBDefinition(nullptr, from) {}
  inline DBDefinition(DBDefinition&& from) noexcept
      : DBDefinition(nullptr, std::move(from)) {}
  inline DBDefinition& operator=(const DBDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline DBDefinition& operator=(DBDefinition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DBDefinition& default_instance() {
    return *reinterpret_cast<const DBDefinition*>(
        &_DBDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DBDefinition& a, DBDefinition& b) { a.Swap(&b); }
  inline void Swap(DBDefinition* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DBDefinition* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DBDefinition* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DBDefinition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DBDefinition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DBDefinition& from) { DBDefinition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DBDefinition* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "keystoneDB.DBDefinition"; }

 protected:
  explicit DBDefinition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DBDefinition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DBDefinition& from);
  DBDefinition(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DBDefinition&& from) noexcept
      : DBDefinition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DefinitionType = DBDefinition_DefinitionType;
  static constexpr DefinitionType INTEGER = DBDefinition_DefinitionType_INTEGER;
  static constexpr DefinitionType CHAR = DBDefinition_DefinitionType_CHAR;
  static constexpr DefinitionType FLOAT = DBDefinition_DefinitionType_FLOAT;
  static inline bool DefinitionType_IsValid(int value) {
    return DBDefinition_DefinitionType_IsValid(value);
  }
  static constexpr DefinitionType DefinitionType_MIN = DBDefinition_DefinitionType_DefinitionType_MIN;
  static constexpr DefinitionType DefinitionType_MAX = DBDefinition_DefinitionType_DefinitionType_MAX;
  static constexpr int DefinitionType_ARRAYSIZE = DBDefinition_DefinitionType_DefinitionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DefinitionType_descriptor() {
    return DBDefinition_DefinitionType_descriptor();
  }
  template <typename T>
  static inline const std::string& DefinitionType_Name(T value) {
    return DBDefinition_DefinitionType_Name(value);
  }
  static inline bool DefinitionType_Parse(
      absl::string_view name, DefinitionType* PROTOBUF_NONNULL value) {
    return DBDefinition_DefinitionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kCharLenFieldNumber = 5,
    kIsPrimaryFieldNumber = 3,
    kIsIndexFieldNumber = 4,
    kNullableFieldNumber = 6,
    kTypeFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // optional uint64 charLen = 5;
  bool has_charlen() const;
  void clear_charlen() ;
  ::uint64_t charlen() const;
  void set_charlen(::uint64_t value);

  private:
  ::uint64_t _internal_charlen() const;
  void _internal_set_charlen(::uint64_t value);

  public:
  // optional bool isPrimary = 3;
  bool has_isprimary() const;
  void clear_isprimary() ;
  bool isprimary() const;
  void set_isprimary(bool value);

  private:
  bool _internal_isprimary() const;
  void _internal_set_isprimary(bool value);

  public:
  // optional bool isIndex = 4;
  bool has_isindex() const;
  void clear_isindex() ;
  bool isindex() const;
  void set_isindex(bool value);

  private:
  bool _internal_isindex() const;
  void _internal_set_isindex(bool value);

  public:
  // optional bool nullable = 6;
  bool has_nullable() const;
  void clear_nullable() ;
  bool nullable() const;
  void set_nullable(bool value);

  private:
  bool _internal_nullable() const;
  void _internal_set_nullable(bool value);

  public:
  // optional .keystoneDB.DBDefinition.DefinitionType type = 1;
  bool has_type() const;
  void clear_type() ;
  ::keystoneDB::DBDefinition_DefinitionType type() const;
  void set_type(::keystoneDB::DBDefinition_DefinitionType value);

  private:
  ::keystoneDB::DBDefinition_DefinitionType _internal_type() const;
  void _internal_set_type(::keystoneDB::DBDefinition_DefinitionType value);

  public:
  // @@protoc_insertion_point(class_scope:keystoneDB.DBDefinition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DBDefinition& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint64_t charlen_;
    bool isprimary_;
    bool isindex_;
    bool nullable_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fcodec_2fdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DBDefinition_class_data_;
// -------------------------------------------------------------------

class Column final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:keystoneDB.Column) */ {
 public:
  inline Column() : Column(nullptr) {}
  ~Column() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Column* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Column));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Column(::google::protobuf::internal::ConstantInitialized);

  inline Column(const Column& from) : Column(nullptr, from) {}
  inline Column(Column&& from) noexcept
      : Column(nullptr, std::move(from)) {}
  inline Column& operator=(const Column& from) {
    CopyFrom(from);
    return *this;
  }
  inline Column& operator=(Column&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Column& default_instance() {
    return *reinterpret_cast<const Column*>(
        &_Column_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Column& a, Column& b) { a.Swap(&b); }
  inline void Swap(Column* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Column* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Column* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Column>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Column& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Column& from) { Column::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Column* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "keystoneDB.Column"; }

 protected:
  explicit Column(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Column(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Column& from);
  Column(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Column&& from) noexcept
      : Column(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ColumnType = Column_ColumnType;
  static constexpr ColumnType COLUMN_INT = Column_ColumnType_COLUMN_INT;
  static constexpr ColumnType COLUMN_CHAR = Column_ColumnType_COLUMN_CHAR;
  static constexpr ColumnType COLUMN_NULL = Column_ColumnType_COLUMN_NULL;
  static constexpr ColumnType COLUMN_FLOAT = Column_ColumnType_COLUMN_FLOAT;
  static inline bool ColumnType_IsValid(int value) {
    return Column_ColumnType_IsValid(value);
  }
  static constexpr ColumnType ColumnType_MIN = Column_ColumnType_ColumnType_MIN;
  static constexpr ColumnType ColumnType_MAX = Column_ColumnType_ColumnType_MAX;
  static constexpr int ColumnType_ARRAYSIZE = Column_ColumnType_ColumnType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ColumnType_descriptor() {
    return Column_ColumnType_descriptor();
  }
  template <typename T>
  static inline const std::string& ColumnType_Name(T value) {
    return Column_ColumnType_Name(value);
  }
  static inline bool ColumnType_Parse(
      absl::string_view name, ColumnType* PROTOBUF_NONNULL value) {
    return Column_ColumnType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kStrFieldNumber = 3,
    kTypeFieldNumber = 1,
    kIntegerNumFieldNumber = 2,
    kFloatNumFieldNumber = 4,
  };
  // optional string str = 3;
  bool has_str() const;
  void clear_str() ;
  const std::string& str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_str(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_str();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_str();
  void set_allocated_str(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_str() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_str(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_str();

  public:
  // optional .keystoneDB.Column.ColumnType type = 1;
  bool has_type() const;
  void clear_type() ;
  ::keystoneDB::Column_ColumnType type() const;
  void set_type(::keystoneDB::Column_ColumnType value);

  private:
  ::keystoneDB::Column_ColumnType _internal_type() const;
  void _internal_set_type(::keystoneDB::Column_ColumnType value);

  public:
  // optional int32 integer_num = 2;
  bool has_integer_num() const;
  void clear_integer_num() ;
  ::int32_t integer_num() const;
  void set_integer_num(::int32_t value);

  private:
  ::int32_t _internal_integer_num() const;
  void _internal_set_integer_num(::int32_t value);

  public:
  // optional double float_num = 4;
  bool has_float_num() const;
  void clear_float_num() ;
  double float_num() const;
  void set_float_num(double value);

  private:
  double _internal_float_num() const;
  void _internal_set_float_num(double value);

  public:
  // @@protoc_insertion_point(class_scope:keystoneDB.Column)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 29,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Column& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr str_;
    int type_;
    ::int32_t integer_num_;
    double float_num_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fcodec_2fdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Column_class_data_;
// -------------------------------------------------------------------

class TableMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:keystoneDB.TableMetadata) */ {
 public:
  inline TableMetadata() : TableMetadata(nullptr) {}
  ~TableMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TableMetadata* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TableMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TableMetadata(::google::protobuf::internal::ConstantInitialized);

  inline TableMetadata(const TableMetadata& from) : TableMetadata(nullptr, from) {}
  inline TableMetadata(TableMetadata&& from) noexcept
      : TableMetadata(nullptr, std::move(from)) {}
  inline TableMetadata& operator=(const TableMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline TableMetadata& operator=(TableMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TableMetadata& default_instance() {
    return *reinterpret_cast<const TableMetadata*>(
        &_TableMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TableMetadata& a, TableMetadata& b) { a.Swap(&b); }
  inline void Swap(TableMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TableMetadata* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TableMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TableMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TableMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TableMetadata& from) { TableMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TableMetadata* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "keystoneDB.TableMetadata"; }

 protected:
  explicit TableMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TableMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TableMetadata& from);
  TableMetadata(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TableMetadata&& from) noexcept
      : TableMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefinitionsFieldNumber = 1,
    kNextIdFieldNumber = 2,
    kHasPrimaryFieldNumber = 3,
  };
  // repeated .keystoneDB.DBDefinition definitions = 1;
  int definitions_size() const;
  private:
  int _internal_definitions_size() const;

  public:
  void clear_definitions() ;
  ::keystoneDB::DBDefinition* PROTOBUF_NONNULL mutable_definitions(int index);
  ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>* PROTOBUF_NONNULL mutable_definitions();

  private:
  const ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>& _internal_definitions() const;
  ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>* PROTOBUF_NONNULL _internal_mutable_definitions();
  public:
  const ::keystoneDB::DBDefinition& definitions(int index) const;
  ::keystoneDB::DBDefinition* PROTOBUF_NONNULL add_definitions();
  const ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>& definitions() const;
  // optional uint64 nextId = 2;
  bool has_nextid() const;
  void clear_nextid() ;
  ::uint64_t nextid() const;
  void set_nextid(::uint64_t value);

  private:
  ::uint64_t _internal_nextid() const;
  void _internal_set_nextid(::uint64_t value);

  public:
  // optional bool hasPrimary = 3;
  bool has_hasprimary() const;
  void clear_hasprimary() ;
  bool hasprimary() const;
  void set_hasprimary(bool value);

  private:
  bool _internal_hasprimary() const;
  void _internal_set_hasprimary(bool value);

  public:
  // @@protoc_insertion_point(class_scope:keystoneDB.TableMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TableMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::keystoneDB::DBDefinition > definitions_;
    ::uint64_t nextid_;
    bool hasprimary_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fcodec_2fdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TableMetadata_class_data_;
// -------------------------------------------------------------------

class Row final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:keystoneDB.Row) */ {
 public:
  inline Row() : Row(nullptr) {}
  ~Row() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Row* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Row));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Row(::google::protobuf::internal::ConstantInitialized);

  inline Row(const Row& from) : Row(nullptr, from) {}
  inline Row(Row&& from) noexcept
      : Row(nullptr, std::move(from)) {}
  inline Row& operator=(const Row& from) {
    CopyFrom(from);
    return *this;
  }
  inline Row& operator=(Row&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Row& default_instance() {
    return *reinterpret_cast<const Row*>(
        &_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Row& a, Row& b) { a.Swap(&b); }
  inline void Swap(Row* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Row* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Row* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Row>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Row& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Row& from) { Row::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Row* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "keystoneDB.Row"; }

 protected:
  explicit Row(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Row(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Row& from);
  Row(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Row&& from) noexcept
      : Row(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kColumnsFieldNumber = 1,
  };
  // repeated .keystoneDB.Column columns = 1;
  int columns_size() const;
  private:
  int _internal_columns_size() const;

  public:
  void clear_columns() ;
  ::keystoneDB::Column* PROTOBUF_NONNULL mutable_columns(int index);
  ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>* PROTOBUF_NONNULL mutable_columns();

  private:
  const ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>& _internal_columns() const;
  ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>* PROTOBUF_NONNULL _internal_mutable_columns();
  public:
  const ::keystoneDB::Column& columns(int index) const;
  ::keystoneDB::Column* PROTOBUF_NONNULL add_columns();
  const ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>& columns() const;
  // @@protoc_insertion_point(class_scope:keystoneDB.Row)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Row& from_msg);
    ::google::protobuf::RepeatedPtrField< ::keystoneDB::Column > columns_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fcodec_2fdb_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Row_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Column

// optional .keystoneDB.Column.ColumnType type = 1;
inline bool Column::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Column::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::keystoneDB::Column_ColumnType Column::type() const {
  // @@protoc_insertion_point(field_get:keystoneDB.Column.type)
  return _internal_type();
}
inline void Column::set_type(::keystoneDB::Column_ColumnType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:keystoneDB.Column.type)
}
inline ::keystoneDB::Column_ColumnType Column::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::keystoneDB::Column_ColumnType>(_impl_.type_);
}
inline void Column::_internal_set_type(::keystoneDB::Column_ColumnType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::keystoneDB::Column_ColumnType_internal_data_));
                                          _impl_.type_ = value;
}

// optional int32 integer_num = 2;
inline bool Column::has_integer_num() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Column::clear_integer_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integer_num_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t Column::integer_num() const {
  // @@protoc_insertion_point(field_get:keystoneDB.Column.integer_num)
  return _internal_integer_num();
}
inline void Column::set_integer_num(::int32_t value) {
  _internal_set_integer_num(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:keystoneDB.Column.integer_num)
}
inline ::int32_t Column::_internal_integer_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.integer_num_;
}
inline void Column::_internal_set_integer_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.integer_num_ = value;
}

// optional string str = 3;
inline bool Column::has_str() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Column::clear_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.str_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Column::str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:keystoneDB.Column.str)
  return _internal_str();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Column::set_str(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:keystoneDB.Column.str)
}
inline std::string* PROTOBUF_NONNULL Column::mutable_str()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_str();
  // @@protoc_insertion_point(field_mutable:keystoneDB.Column.str)
  return _s;
}
inline const std::string& Column::_internal_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.str_.Get();
}
inline void Column::_internal_set_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.str_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL Column::_internal_mutable_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.str_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE Column::release_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:keystoneDB.Column.str)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.str_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.str_.Set("", GetArena());
  }
  return released;
}
inline void Column::set_allocated_str(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.str_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.str_.IsDefault()) {
    _impl_.str_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:keystoneDB.Column.str)
}

// optional double float_num = 4;
inline bool Column::has_float_num() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Column::clear_float_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_num_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double Column::float_num() const {
  // @@protoc_insertion_point(field_get:keystoneDB.Column.float_num)
  return _internal_float_num();
}
inline void Column::set_float_num(double value) {
  _internal_set_float_num(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:keystoneDB.Column.float_num)
}
inline double Column::_internal_float_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.float_num_;
}
inline void Column::_internal_set_float_num(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_num_ = value;
}

// -------------------------------------------------------------------

// Row

// repeated .keystoneDB.Column columns = 1;
inline int Row::_internal_columns_size() const {
  return _internal_columns().size();
}
inline int Row::columns_size() const {
  return _internal_columns_size();
}
inline void Row::clear_columns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.columns_.Clear();
}
inline ::keystoneDB::Column* PROTOBUF_NONNULL Row::mutable_columns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:keystoneDB.Row.columns)
  return _internal_mutable_columns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>* PROTOBUF_NONNULL Row::mutable_columns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:keystoneDB.Row.columns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_columns();
}
inline const ::keystoneDB::Column& Row::columns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:keystoneDB.Row.columns)
  return _internal_columns().Get(index);
}
inline ::keystoneDB::Column* PROTOBUF_NONNULL Row::add_columns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::keystoneDB::Column* _add = _internal_mutable_columns()->Add();
  // @@protoc_insertion_point(field_add:keystoneDB.Row.columns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>& Row::columns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:keystoneDB.Row.columns)
  return _internal_columns();
}
inline const ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>&
Row::_internal_columns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.columns_;
}
inline ::google::protobuf::RepeatedPtrField<::keystoneDB::Column>* PROTOBUF_NONNULL
Row::_internal_mutable_columns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.columns_;
}

// -------------------------------------------------------------------

// TableMetadata

// repeated .keystoneDB.DBDefinition definitions = 1;
inline int TableMetadata::_internal_definitions_size() const {
  return _internal_definitions().size();
}
inline int TableMetadata::definitions_size() const {
  return _internal_definitions_size();
}
inline void TableMetadata::clear_definitions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.definitions_.Clear();
}
inline ::keystoneDB::DBDefinition* PROTOBUF_NONNULL TableMetadata::mutable_definitions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:keystoneDB.TableMetadata.definitions)
  return _internal_mutable_definitions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>* PROTOBUF_NONNULL TableMetadata::mutable_definitions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:keystoneDB.TableMetadata.definitions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_definitions();
}
inline const ::keystoneDB::DBDefinition& TableMetadata::definitions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:keystoneDB.TableMetadata.definitions)
  return _internal_definitions().Get(index);
}
inline ::keystoneDB::DBDefinition* PROTOBUF_NONNULL TableMetadata::add_definitions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::keystoneDB::DBDefinition* _add = _internal_mutable_definitions()->Add();
  // @@protoc_insertion_point(field_add:keystoneDB.TableMetadata.definitions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>& TableMetadata::definitions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:keystoneDB.TableMetadata.definitions)
  return _internal_definitions();
}
inline const ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>&
TableMetadata::_internal_definitions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.definitions_;
}
inline ::google::protobuf::RepeatedPtrField<::keystoneDB::DBDefinition>* PROTOBUF_NONNULL
TableMetadata::_internal_mutable_definitions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.definitions_;
}

// optional uint64 nextId = 2;
inline bool TableMetadata::has_nextid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TableMetadata::clear_nextid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nextid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t TableMetadata::nextid() const {
  // @@protoc_insertion_point(field_get:keystoneDB.TableMetadata.nextId)
  return _internal_nextid();
}
inline void TableMetadata::set_nextid(::uint64_t value) {
  _internal_set_nextid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:keystoneDB.TableMetadata.nextId)
}
inline ::uint64_t TableMetadata::_internal_nextid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nextid_;
}
inline void TableMetadata::_internal_set_nextid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nextid_ = value;
}

// optional bool hasPrimary = 3;
inline bool TableMetadata::has_hasprimary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void TableMetadata::clear_hasprimary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hasprimary_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool TableMetadata::hasprimary() const {
  // @@protoc_insertion_point(field_get:keystoneDB.TableMetadata.hasPrimary)
  return _internal_hasprimary();
}
inline void TableMetadata::set_hasprimary(bool value) {
  _internal_set_hasprimary(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:keystoneDB.TableMetadata.hasPrimary)
}
inline bool TableMetadata::_internal_hasprimary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hasprimary_;
}
inline void TableMetadata::_internal_set_hasprimary(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hasprimary_ = value;
}

// -------------------------------------------------------------------

// DBDefinition

// optional .keystoneDB.DBDefinition.DefinitionType type = 1;
inline bool DBDefinition::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void DBDefinition::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 1;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::keystoneDB::DBDefinition_DefinitionType DBDefinition::type() const {
  // @@protoc_insertion_point(field_get:keystoneDB.DBDefinition.type)
  return _internal_type();
}
inline void DBDefinition::set_type(::keystoneDB::DBDefinition_DefinitionType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:keystoneDB.DBDefinition.type)
}
inline ::keystoneDB::DBDefinition_DefinitionType DBDefinition::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::keystoneDB::DBDefinition_DefinitionType>(_impl_.type_);
}
inline void DBDefinition::_internal_set_type(::keystoneDB::DBDefinition_DefinitionType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);

                                          assert(::google::protobuf::internal::ValidateEnum(
                                              value, ::keystoneDB::DBDefinition_DefinitionType_internal_data_));
                                          _impl_.type_ = value;
}

// optional string name = 2;
inline bool DBDefinition::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void DBDefinition::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DBDefinition::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:keystoneDB.DBDefinition.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DBDefinition::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:keystoneDB.DBDefinition.name)
}
inline std::string* PROTOBUF_NONNULL DBDefinition::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:keystoneDB.DBDefinition.name)
  return _s;
}
inline const std::string& DBDefinition::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void DBDefinition::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL DBDefinition::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE DBDefinition::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:keystoneDB.DBDefinition.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void DBDefinition::set_allocated_name(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:keystoneDB.DBDefinition.name)
}

// optional bool isPrimary = 3;
inline bool DBDefinition::has_isprimary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void DBDefinition::clear_isprimary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isprimary_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool DBDefinition::isprimary() const {
  // @@protoc_insertion_point(field_get:keystoneDB.DBDefinition.isPrimary)
  return _internal_isprimary();
}
inline void DBDefinition::set_isprimary(bool value) {
  _internal_set_isprimary(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:keystoneDB.DBDefinition.isPrimary)
}
inline bool DBDefinition::_internal_isprimary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isprimary_;
}
inline void DBDefinition::_internal_set_isprimary(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isprimary_ = value;
}

// optional bool isIndex = 4;
inline bool DBDefinition::has_isindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void DBDefinition::clear_isindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isindex_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool DBDefinition::isindex() const {
  // @@protoc_insertion_point(field_get:keystoneDB.DBDefinition.isIndex)
  return _internal_isindex();
}
inline void DBDefinition::set_isindex(bool value) {
  _internal_set_isindex(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:keystoneDB.DBDefinition.isIndex)
}
inline bool DBDefinition::_internal_isindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isindex_;
}
inline void DBDefinition::_internal_set_isindex(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isindex_ = value;
}

// optional uint64 charLen = 5;
inline bool DBDefinition::has_charlen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void DBDefinition::clear_charlen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.charlen_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t DBDefinition::charlen() const {
  // @@protoc_insertion_point(field_get:keystoneDB.DBDefinition.charLen)
  return _internal_charlen();
}
inline void DBDefinition::set_charlen(::uint64_t value) {
  _internal_set_charlen(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:keystoneDB.DBDefinition.charLen)
}
inline ::uint64_t DBDefinition::_internal_charlen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.charlen_;
}
inline void DBDefinition::_internal_set_charlen(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.charlen_ = value;
}

// optional bool nullable = 6;
inline bool DBDefinition::has_nullable() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void DBDefinition::clear_nullable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nullable_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool DBDefinition::nullable() const {
  // @@protoc_insertion_point(field_get:keystoneDB.DBDefinition.nullable)
  return _internal_nullable();
}
inline void DBDefinition::set_nullable(bool value) {
  _internal_set_nullable(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:keystoneDB.DBDefinition.nullable)
}
inline bool DBDefinition::_internal_nullable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nullable_;
}
inline void DBDefinition::_internal_set_nullable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nullable_ = value;
}

// -------------------------------------------------------------------

// DBMetadata

// repeated string tables = 1;
inline int DBMetadata::_internal_tables_size() const {
  return _internal_tables().size();
}
inline int DBMetadata::tables_size() const {
  return _internal_tables_size();
}
inline void DBMetadata::clear_tables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tables_.Clear();
}
inline std::string* PROTOBUF_NONNULL DBMetadata::add_tables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_tables()->Add();
  // @@protoc_insertion_point(field_add_mutable:keystoneDB.DBMetadata.tables)
  return _s;
}
inline const std::string& DBMetadata::tables(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:keystoneDB.DBMetadata.tables)
  return _internal_tables().Get(index);
}
inline std::string* PROTOBUF_NONNULL DBMetadata::mutable_tables(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:keystoneDB.DBMetadata.tables)
  return _internal_mutable_tables()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DBMetadata::set_tables(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_tables()->Mutable(index), std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:keystoneDB.DBMetadata.tables)
}
template <typename Arg_, typename... Args_>
inline void DBMetadata::add_tables(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_tables(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:keystoneDB.DBMetadata.tables)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& DBMetadata::tables() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:keystoneDB.DBMetadata.tables)
  return _internal_tables();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
DBMetadata::mutable_tables() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:keystoneDB.DBMetadata.tables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tables();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DBMetadata::_internal_tables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tables_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
DBMetadata::_internal_mutable_tables() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tables_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace keystoneDB


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::keystoneDB::Column_ColumnType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::keystoneDB::Column_ColumnType>() {
  return ::keystoneDB::Column_ColumnType_descriptor();
}
template <>
struct is_proto_enum<::keystoneDB::DBDefinition_DefinitionType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::keystoneDB::DBDefinition_DefinitionType>() {
  return ::keystoneDB::DBDefinition_DefinitionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // common_2fcodec_2fdb_2eproto_2epb_2eh
